{"ast":null,"code":"var _jsxFileName = \"D:\\\\Mayur\\\\MMC\\\\mmc-proj\\\\frontend\\\\src\\\\pages\\\\provider\\\\providerLogin.jsx\",\n  _s = $RefreshSig$();\n// LoginPage.js\nimport React, { useEffect, useState } from 'react';\nimport ProviderOTPInput from '../../components/provOTPInput'; // Assume you have an OTP input component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProviderLoginPage = ({\n  history\n}) => {\n  _s();\n  const [otp, setOTP] = useState('');\n  const [data, setData] = useState([{}]);\n  useEffect(() => {\n    fetch(\"/members\").then(res => res.json()).then(data => {\n      setData(data);\n      console.log(data);\n    });\n  }, []);\n  const handleLogin = () => {\n    // Handle OTP verification and login logic here\n    if (otp === '123456') {\n      // Replace '123456' with your actual OTP\n      // Redirect to dashboard or home page on successful login\n      alert('Successfully logged in.');\n    } else {\n      alert('Invalid OTP. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"OTP-based Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProviderOTPInput, {\n      value: otp,\n      onChange: setOTP\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(ProviderLoginPage, \"23a5/rL23GCjxQIm404LoH8oKg0=\");\n_c = ProviderLoginPage;\nexport default ProviderLoginPage;\nvar _c;\n$RefreshReg$(_c, \"ProviderLoginPage\");","map":{"version":3,"names":["React","useEffect","useState","ProviderOTPInput","jsxDEV","_jsxDEV","ProviderLoginPage","history","_s","otp","setOTP","data","setData","fetch","then","res","json","console","log","handleLogin","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","onClick","_c","$RefreshReg$"],"sources":["D:/Mayur/MMC/mmc-proj/frontend/src/pages/provider/providerLogin.jsx"],"sourcesContent":["// LoginPage.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport ProviderOTPInput from '../../components/provOTPInput'; // Assume you have an OTP input component\r\n\r\nconst ProviderLoginPage = ({ history }) => {\r\n  const [otp, setOTP] = useState('');\r\n  const [data, setData] = useState([{}]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/members\").then(\r\n      res => res.json()\r\n    ).then(\r\n      data => {\r\n        setData(data);\r\n        console.log(data);\r\n      }\r\n    )\r\n  }, []\r\n\r\n  );\r\n\r\n  const handleLogin = () => {\r\n    // Handle OTP verification and login logic here\r\n    if (otp === '123456') { // Replace '123456' with your actual OTP\r\n      // Redirect to dashboard or home page on successful login\r\n      alert('Successfully logged in.');\r\n    } else {\r\n      alert('Invalid OTP. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>OTP-based Login</h2>\r\n      <ProviderOTPInput value={otp} onChange={setOTP} />\r\n      <button onClick={handleLogin}>Login</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProviderLoginPage;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,gBAAgB,MAAM,+BAA+B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9D,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACdY,KAAK,CAAC,UAAU,CAAC,CAACC,IAAI,CACpBC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAClB,CAAC,CAACF,IAAI,CACJH,IAAI,IAAI;MACNC,OAAO,CAACD,IAAI,CAAC;MACbM,OAAO,CAACC,GAAG,CAACP,IAAI,CAAC;IACnB,CACF,CAAC;EACH,CAAC,EAAE,EAEH,CAAC;EAED,MAAMQ,WAAW,GAAGA,CAAA,KAAM;IACxB;IACA,IAAIV,GAAG,KAAK,QAAQ,EAAE;MAAE;MACtB;MACAW,KAAK,CAAC,yBAAyB,CAAC;IAClC,CAAC,MAAM;MACLA,KAAK,CAAC,gCAAgC,CAAC;IACzC;EACF,CAAC;EAED,oBACEf,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBpB,OAAA,CAACF,gBAAgB;MAACuB,KAAK,EAAEjB,GAAI;MAACkB,QAAQ,EAAEjB;IAAO;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClDpB,OAAA;MAAQuB,OAAO,EAAET,WAAY;MAAAE,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEV,CAAC;AAACjB,EAAA,CAlCIF,iBAAiB;AAAAuB,EAAA,GAAjBvB,iBAAiB;AAoCvB,eAAeA,iBAAiB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}